// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String        @id @default(uuid())
  name        String        @unique
  products    Product[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model SubCategory {
  id          String        @id @default(uuid())
  name        String        @unique
  products    Product[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Brand {
  id          String        @id @default(uuid())
  name        String        @unique
  products    Product[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Product {
  id              String       @id @default(uuid())
  rayon           String
  category        Category     @relation(fields: [categoryId], references: [id])
  categoryId      String
  subCategory     SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId   String?
  brand           Brand?       @relation(fields: [brandId], references: [id])
  brandId         String?
  conditionnement String?
  quantite        Int          @default(0)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  barcodes        Barcode[]

  @@index([rayon])
  @@index([categoryId])
  @@index([subCategoryId])
  @@index([brandId])
}

model Barcode {
  id        String   @id @default(uuid())
  code      String   @unique
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())

  @@index([code])
  @@index([productId])
}
